#!/usr/bin/env bash

# shellcheck disable=SC2034
SCRIPTPATH="$(
  cd -- "$(dirname "$0")" >/dev/null 2>&1 || exit 1
  pwd -P
)"
SCRIPTNAME="$(basename "$0")"
set -e

init_logger() {
  local log_file="${XDG_CACHE_HOME:-${HOME}/.cache}/snippets/_log.sh"
  local last_download_file="/tmp/_log.time"
  local delai=14400 # 4 hours
  # shellcheck disable=SC2155
  local curr_time=$(date +%s)
  local time="$((curr_time - $(cat "${last_download_file}" 2>/dev/null || echo "0")))"

  if ! [[ -f "${log_file}" ]] ||
    { [[ -f "${log_file}" ]] && [[ "${time}" -gt "${delai}" ]]; }; then
    if ping -q -c 1 framagit.org &>/dev/null; then
      # shellcheck disable=SC1090
      source <(curl -s https://framagit.org/-/snippets/7183/raw/main/_get_log.sh)
      echo "${curr_time}" >"${last_download_file}"
    else
      echo -e "\033[1;33m[WARNING]\033[0;33m Unable to get last logger version, will use \`echo\`.\033[0m"
      _log() {
        echo "$@"
      }
    fi
  else
    # shellcheck disable=SC1090
    source <(cat "${log_file}")
  fi
}

_ask_license() {
  echo "What license to apply (default 1):" >&2
  echo "* 1: MIT (primary) and BEERWARE (secondary)" >&2
  echo "* 2: COPYRIGHT" >&2
  read -r info_value

  if [[ ${info_value:-1} -eq 1 ]]; then
    # shellcheck disable=SC2028
    echo "primary: MIT\n  secondary:\n    - BEERWARE"
  else
    echo "primary: COPYRIGHT"
  fi
}

_ask() {
  local info_id="$1"
  echo "${info_id} of the repo:" >&2
  read -r info_value
  echo "${info_value}"
}

_dgs_init() {
  slug=$(basename "${PWD}")
  name=$(_ask "name")
  desc=$(_ask "description" | fold -sw 78 | tr '\n' '%' | sed -e 's/%/\\n  /g')
  curr_year=$(date "+%Y")
  license=$(_ask_license)

  path=${PWD//"${HOME}/git/"/}
  path=${path//"framagit.org/private"/"framagit.org/rdeville-private"}
  path=${path//"framagit.org/public"/"framagit.org/rdeville-public"}
  sed \
    -e "s|TPL:NAME|${name}|g" \
    -e "s|TPL:SLUG|${slug}|g" \
    -e "s|TPL:DESC|${desc}|g" \
    -e "s|TPL:CURR_YEAR|${curr_year}|g" \
    -e "s|TPL:LICENSE|${license}|g" \
    -e "s|TPL:PATH|${path}|g" \
    "${SCRIPTPATH}/assets/dotgit.tpl.yaml" > "${DGS_CFG}"
}

_git_init() {
  if ! [[ -d "${PWD}/.git" ]]; then
    git init
  fi

  local msg="ðŸŽ‰ Initial Empty Commit"
  if ! git log | grep -q "${msg}"; then
    git commit --allow-empty -m "${msg}"
  fi

  local tag="v0.0.0"
  local tag_msg="ðŸ”– Initial Empty Release"
  if ! git tag | grep -q "${tag}"; then
    git tag "${tag}" -m "${tag_msg}"
  fi


  local branch="feat/dgs-init"
  if ! git branch | grep -q "${branch}"; then
    git checkout -b "${branch}"
  fi
}

main() {
  export DEBUG_LEVEL="${DEBUG_LEVEL:-INFO}"
  init_logger

  DGS_CFG="${PWD}/.dotgit.yaml"

  _git_init
  if ! [[ -f "${DGS_CFG}" ]]; then
    _dgs_init
  fi
  nvim "${DGS_CFG}"
  dotgit-sync -v
  "${SCRIPTPATH}/dgs_commit"

  return
}

main
